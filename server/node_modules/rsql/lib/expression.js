"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const types_1 = require("./types");
class Expression {
    constructor(field, operator, value) {
        this.field = field;
        this.operator = operator;
        this.value = value;
        this.string = () => {
            let str = this.field;
            switch (this.operator) {
                case types_1.Operator.Equal:
                    str += '==';
                    break;
                case types_1.Operator.NotEqual:
                    str += '=ne=';
                    break;
                case types_1.Operator.LesserThan:
                    str += '<';
                    break;
                case types_1.Operator.LesserEqual:
                    str += '<=';
                    break;
                case types_1.Operator.GreaterThan:
                    str += '>';
                    break;
                case types_1.Operator.GreaterEqual:
                    str += '>=';
                    break;
                case types_1.Operator.In:
                    str += '=in=';
                    break;
                case types_1.Operator.NotIn:
                    str += '=nin=';
                    break;
                case types_1.Operator.Like:
                    str += '=like=';
                    break;
                case types_1.Operator.NotLike:
                    str += '=nlike=';
                    break;
                default:
                    throw new Error('unsupported Operator');
            }
            switch (typeof this.value) {
                case 'string':
                    str += `'${this.value}'`;
                    break;
                default:
                    str += this.value;
            }
            return str;
        };
    }
}
exports.Expression = Expression;
